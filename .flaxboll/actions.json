{"1748894826751":{"actionType":"saveAll","createdAt":"1748894826751","actionID":"1748894826751","userID":"#TEMP","path":"system.capsules.63cda9f5-e38d-4306-9ba9-2cc636e0511c.capsUseCodeInfo.capsUseInputs.sss_custom_caps-0.capsIptTxtValue","oldValue":"()=> {\nconst [sc, setSc] = useState({\n    scA0: {\n      form: {\n        userName: \"\",\n        userPassword: \"\",\n      },\n    },\n  });\n\n  const [mensagemErro, setMensagemErro] = useState(\"\");\n\n  const handleUserNameChange = (text) => {\n    setSc((prev) => ({\n      ...prev,\n      scA0: {\n        ...prev.scA0,\n        form: {\n          ...prev.scA0.form,\n          userName: text,\n        },\n      },\n    }));\n  };\n\n  const handleUserPasswordChange = (text) => {\n    setSc((prev) => ({\n      ...prev,\n      scA0: {\n        ...prev.scA0,\n        form: {\n          ...prev.scA0.form,\n          userPassword: text,\n        },\n      },\n    }));\n  };\n\n  const validateLogin = () => {\n    const { userName, userPassword } = sc.scA0.form;\n\n    if (!userName || userName.trim() === \"\") {\n      return \"Nome de usuário inválido ou vazio.\";\n    }\n\n    if (!userPassword || userPassword.trim() === \"\") {\n      return \"Senha inválida ou vazia.\";\n    }\n\n    return \"OK\";\n  };\n\n  const handlePress = () => {\n    const resultado = validateLogin();\n    if (resultado !== \"OK\") {\n      setMensagemErro(resultado);\n      console.log(resultado);\n    } else {\n      setMensagemErro(\"\");\n      console.log(\"Login válido, pode prosseguir!\");\n    }\n};","newValue":"() => {\nconst [sc, setSc] = useState({\n    scA0: {\n      form: {\n        userName: \"\",\n        userPassword: \"\",\n      },\n    },\n  });\n\n  const [mensagemErro, setMensagemErro] = useState(\"\");\n\n  const handleUserNameChange = (text) => {\n    setSc((prev) => ({\n      ...prev,\n      scA0: {\n        ...prev.scA0,\n        form: {\n          ...prev.scA0.form,\n          userName: text,\n        },\n      },\n    }));\n  };\n\n  const handleUserPasswordChange = (text) => {\n    setSc((prev) => ({\n      ...prev,\n      scA0: {\n        ...prev.scA0,\n        form: {\n          ...prev.scA0.form,\n          userPassword: text,\n        },\n      },\n    }));\n  };\n\n  const validateLogin = () => {\n    const { userName, userPassword } = sc.scA0.form;\n\n    if (!userName || userName.trim() === \"\") {\n      return \"Nome de usuário inválido ou vazio.\";\n    }\n\n    if (!userPassword || userPassword.trim() === \"\") {\n      return \"Senha inválida ou vazia.\";\n    }\n\n    return \"OK\";\n  };\n\n  const handlePress = () => {\n    const resultado = validateLogin();\n    if (resultado !== \"OK\") {\n      setMensagemErro(resultado);\n      console.log(resultado);\n    } else {\n      setMensagemErro(\"\");\n      console.log(\"Login válido, pode prosseguir!\");\n    }\n};"}}